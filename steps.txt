
1) Installare Anaconda (Ricordarsi di aggiornare le variabili di ambiente...path...)

2) da shell, creare un environment per CEBRA (non è necessario specificare la versione di python ma  se si preferisce, aggiungere alla seguente riga di comando la stringa python=3....la versione che si vuole o meglio compatibile con il proprio matlab;  cfr https://www.mathworks.com/support/requirements/python-compatibility.html) . Quella che parla meglio con pytorch dovrebbe eseere la  3.8 ma vanno bene anche le successive

	conda create -n cebra python=3.8
	
3) Attivare  l'ambiente e installare tutte le librerie e dipendenze opportune 

	conda activate cebra
	conda install pytorch cpuonly -c pytorch
	(N.B.se si dispone di gpu si può anche installare pytorch per gpu $ conda install pytorch 
	cudatoolkit=.... -c pytorch...con la versione di cuda di cui si dispone)
	se ci sono problemi con precdenti versioni di tensorflow...pip uninstall tf-nightly)
	pip install cebra
	pip install --pre 'cebra[dev,demos]'
	#conda install numpy pandas matplotlib joblib  scikit-learn h5py #scikit-learn-intelex 
	#conda install numpy
	conda install pandas
	#conda install matplotlib
	#conda install joblib
	#conda install scikit-learn
	conda install h5py
	#conda install scikit-learn-intelex

#### potrebbe dare warning circa le dipendenze da questi due pacchetti
	%% pip install oauthlib>=3.0.0
	%% pip install protobuf>=3.19.6

	

4) Far partire Matlab (dall'environment creato)
aggiungere la riga di comando con il percorso corretto dell'interprete Python nell'ambiente cebra (digitare 'which python' per  saperlo o  'where python' in windows)
	
	pyenv('Version', 'C:\path\to\conda\envs\cebra\python.exe', 'ExecutionMode', 'OutOfProcess');

far girare lo script matlab...ci potrebbero essere dei conflitti con le librerie c++

5) Lo script in python genera output che grafichiamo in matlab...a seguire 
 nello script matlab precedente

#####################################################################################	
5) Passaggi %%% NECESSARI PER risolvere eventuali conflitti tra  le librerie c++ di matlab e quelle di Python; se matlab usa le sue librerie c++ ci sono possibili conflitti   con quelle richieste da alcuni pacchetti python tipo pandas

trovare il percorso di installazione di MATLAB qualcosa come /usr/local/MATLAB/R2022b, dove R2022b è la versione di MATLAB e cercare le librerie in conflitto sostituendo /usr/local/MATLAB con il percorso di base della installazione MATLAB, sulla propria macchina 
	
	sudo find /usr/local/MATLAB -name libstdc++.so.6

o anche

	locate -b '\libstdc++.so.6'
	
individuato il percorso della librera originale matlab, fare backup (rinominandola)

sudo mv /usr/local/MATLAB/R2022b/toolbox/compiler_sdk/mps_clients/python/dist/matlab/extern/bin/glnxa64/libstdc++.so.6 /usr/local/MATLAB/R2022b/toolbox/compiler_sdk/mps_clients/python/dist/matlab/extern/bin/glnxa64/libstdc++.so.6.backup

verifica

ls -l /usr/local/MATLAB/R2022b/toolbox/compiler_sdk/mps_clients/python/dist/matlab/extern/bin/glnxa64/
#totale 10312


Creare quindi un link simbolico alla libreria libstdc++.so.6 dell'ambiente Conda (cebra0 nel mio caso) creato.Questo indicherà a MATLAB di utilizzare la libreria libstdc++.so.6 dal tuo ambiente Conda invece della sua versione interna:

	sudo ln -s /home/zlollo/anaconda3/envs/cebra0/lib/libstdc++.so.6 /usr/local/MATLAB/R2022b/toolbox/compiler_sdk/mps_clients/python/dist/matlab/extern/bin/glnxa64/libstdc++.so.6

Verifica link simbolico

	ls -l /usr/local/MATLAB/R2022b/toolbox/compiler_sdk/mps_clients/python/dist/matlab/extern/bin/ 
	glnxa64/

Riavviare matlab

#### se tutto ciò non funziona,

se uso python 3.8
	 find ~/anaconda3/envs/cebra -name '_ckdtree.cpython-38-x86_64-linux-gnu.so'

se uso python 3.10
	 find ~/anaconda3/envs/cebra -name '_ckdtree.cpython-310-x86_64-linux-gnu.so'


Usare il comando ldd (da terminale in ambiente conda creato) per listare le dipendenze
dinamiche su file binari

se uso python 3.8
ldd /home/zlollo/anaconda3/envs/cebra/lib/python3.8/site-packages/scipy/spatial/_ckdtree.cpython-38-x86_64-linux-gnu.so

se uso python 3.10	
ldd /home/zlollo/anaconda3/envs/cebra/lib/python3.10/site-packages/scipy/spatial/_ckdtree.cpython-310-x86_64-linux-gnu.so


Generico

	ldd /~anaconda3/envs/cebra/lib/python3...../site-packages/scipy/spatial/_ckdtree.cpython-3....-x86_64-linux-gnu.so


Settare la LD_PRELOAD sul percorso della libreria trovato

	export LD_PRELOAD=/home/zlollo/anaconda3/envs/cebra/lib/libstdc++.so.6:$LD_PRELOAD

Generico
	
	export LD_PRELOAD=/~anaconda3/envs/cebra/lib//libstdc++.so.6:$LD_PRELOAD

Usare echo per vedere se LD_PRELOAD è settato correttamente
	
	echo $LD_PRELOAD

Avviare matlab






